name: Build

on: [push, pull_request]

# as recommended by: https://github.com/actions/checkout/issues/1590
env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
  # === Ubuntu ===
  linux:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Install
        run: |
          sudo apt-get update
          sudo apt-get install libglu1-mesa-dev libasound2-dev libpulse-dev libaudio-dev libsamplerate0-dev libcurl4-openssl-dev -y

      - name: Build
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_SDLGPU=On -DBUILD_PRO=On -DBUILD_WITH_ALL=ON ..
          cmake --build . --config MinSizeRel --parallel

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: "tic80-linux"
          path: |
            build/bin/tic80
            build/bin/*.so

  # === Raspberry PI ===
  rpi:
    runs-on: ubuntu-latest
    container: nesbox/rpi-tic80:latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install Host toolchain
        run: |
          apt-get update
          apt-get install --assume-yes build-essential ruby-full gcc-8-arm-linux-gnueabihf g++-8-arm-linux-gnueabihf

      - name: Build
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_PRO=On -DCMAKE_TOOLCHAIN_FILE=rpi/toolchain.cmake -DBUILD_WITH_ALL=ON ..
          cmake --build . --config MinSizeRel --parallel

      - name: Deploy
        uses: actions/upload-artifact@v3
        with:
          name: "tic80-rpi"
          path: |
            build/bin/tic80
            build/bin/*.so
    
  # === Android ===
  android:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r21e
          add-to-path: false
          local-cache: true

      - name: set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Build
        run: |
          cd build/android
          chmod +x gradlew
          ./gradlew assembleRelease
          cp app/build/outputs/apk/release/app-release.apk tic80.apk

        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: "tic80-android"
          path: build/android/tic80.apk
